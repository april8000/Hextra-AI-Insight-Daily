name: Update Content from Backend Dispatch

on:
  repository_dispatch:
    types: [daily-updated]
  workflow_dispatch:
  schedule:
    - cron: '30 1 * * *'
  push:
    branches: [main]

env:
  TZ: Asia/Shanghai

jobs:
  update-content:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          repository: 'april8000/ai-insight-daily-token'
          ref: 'main'
          path: 'source-repo'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Process and convert content for Hextra-AI-Insight-Daily
        run: |
          echo "🔍 开始处理Hextra-AI-Insight-Daily的内容同步..."
          
          # 处理日报文件到cn目录
          find source-repo/daily -maxdepth 1 -type f -name "*.md" 2>/dev/null | while read -r SOURCE_FILE_PATH; do
            if [ -f "$SOURCE_FILE_PATH" ]; then
              FILENAME=$(basename "$SOURCE_FILE_PATH")
              DATE_PART=$(echo "$FILENAME" | sed -E 's/([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/')
              YEAR_MONTH=$(echo "$DATE_PART" | cut -c1-7)
              
              # 按现有结构创建目录 content/cn/YYYY-MM/
              TARGET_DIR="content/cn/${YEAR_MONTH}"
              mkdir -p "$TARGET_DIR"
              TARGET_FILE="${TARGET_DIR}/${FILENAME}"
              
              echo "--- 处理文件: ${FILENAME} → ${TARGET_FILE} ---"
              
              # 检查是否需要更新
              NEEDS_UPDATE=true
              if [ -f "$TARGET_FILE" ]; then
                SOURCE_CONTENT=$(cat "$SOURCE_FILE_PATH" 2>/dev/null || echo "")
                TARGET_CONTENT=$(tail -n +8 "$TARGET_FILE" 2>/dev/null || echo "")
                if [ "$SOURCE_CONTENT" = "$TARGET_CONTENT" ]; then
                  echo "文件内容相同，跳过更新"
                  NEEDS_UPDATE=false
                fi
              fi
              
              if [ "$NEEDS_UPDATE" = true ]; then
                # 生成适合当前仓库的Front Matter
                cat > "$TARGET_FILE" << EOF
          ---
          title: "AI洞察日报 - ${DATE_PART}"
          date: ${DATE_PART}T08:00:00+08:00
          draft: false
          tags: ["AI", "人工智能", "技术", "日报"]
          categories: ["AI日报"]
          weight: 1
          ---
          
          EOF
                
                # 添加原始内容
                cat "$SOURCE_FILE_PATH" >> "$TARGET_FILE"
                echo "✅ 文件已更新: ${TARGET_FILE}"
                
                # 创建或更新月份索引文件
                MONTH_INDEX="${TARGET_DIR}/_index.md"
                if [ ! -f "$MONTH_INDEX" ]; then
                  cat > "$MONTH_INDEX" << EOF
          ---
          title: "${YEAR_MONTH} AI日报"
          date: ${YEAR_MONTH}-01T00:00:00+08:00
          type: docs
          weight: 1
          ---
          
          # ${YEAR_MONTH} AI洞察日报
          
          本月的AI行业动态和技术趋势汇总。
          EOF
                  echo "✅ 月份索引已创建: ${MONTH_INDEX}"
                fi
              fi
            fi
          done
          
          echo "--- 内容处理完成 ---"
          
          # 显示最终目录结构
          echo "=== 最终目录结构 ==="
          find content/cn -type f -name "*.md" | head -10
          
          # 检查关键文件
          echo "=== 检查关键文件 ==="
          ls -la content/cn/ || echo "cn目录为空"
          ls -la content/cn/*/ || echo "没有月份目录"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add .
          if git diff --staged --quiet; then
            echo "ℹ️ 没有需要提交的更改"
          else
            git commit -m "🤖 自动同步AI日报内容 - $(date +%Y-%m-%d-%H-%M)"
            git push
            echo "✅ 内容已同步并推送到仓库"
          fi

      - name: Notify completion
        if: always()
        run: |
          echo "🎉 Hextra-AI-Insight-Daily 内容同步完成！"
          echo "📊 统计信息："
          find content/cn -name "*.md" -type f | wc -l | xargs echo "总文件数："
          echo "🔗 网站将在几分钟内自动更新"
