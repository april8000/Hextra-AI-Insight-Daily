name: Update Content from Backend Dispatch

on:
  repository_dispatch:
    types: [daily-updated]
  workflow_dispatch:
  schedule:
    - cron: '30 1 * * *'

env:
  TZ: Asia/Shanghai

jobs:
  update-content:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Clone source repository
        uses: actions/checkout@v4
        with:
          repository: 'april8000/ai-insight-daily-token'
          ref: 'main'
          path: 'source-repo'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup enhanced category content
        run: |
          echo "🎨 开始创建增强分类导航版本..."
          
          # 确保所有必要目录存在
          mkdir -p content/cn
          mkdir -p assets/css
          mkdir -p static/images
          
          # 创建增强版CSS
          cat > assets/css/custom.css << 'EOF'
          /* AI洞察日报 - 增强分类导航版 */
          
          /* 1. 基础样式 */
          h1:first-of-type {
            display: none;
          }
          
          .content {
            max-width: none !important;
            overflow: visible !important;
            line-height: 1.7 !important;
            word-wrap: break-word;
            word-break: break-word;
          }
          
          /* 2. 核心色调定义 */
          :root {
            --primary-color: #ff9900;
            --primary-light: #ffaa33;
            --primary-dark: #e68800;
          }
          
          /* 3. 浅色模式分类标签样式 */
          .content blockquote {
            background: linear-gradient(135deg, rgba(255, 153, 0, 0.1), rgba(255, 153, 0, 0.03));
            border: none;
            border-left: 4px solid var(--primary-color);
            border-radius: 8px;
            padding: 1rem 1.5rem;
            margin: 1.5rem 0;
            box-shadow: 0 2px 8px rgba(255, 153, 0, 0.1);
          }
          
          .content blockquote p {
            margin: 0 !important;
            color: var(--primary-color) !important;
            font-weight: 600 !important;
            font-size: 0.95rem !important;
          }
          
          .content blockquote code {
            background-color: rgba(255, 153, 0, 0.2) !important;
            color: var(--primary-dark) !important;
            padding: 2px 6px !important;
            border-radius: 4px !important;
            font-weight: 600 !important;
            border: 1px solid rgba(255, 153, 0, 0.3) !important;
          }
          
          /* 4. 新闻条目样式 */
          .content ol li,
          .content ul li {
            margin-bottom: 1.5rem !important;
            padding: 1.2rem !important;
            background: rgba(255, 153, 0, 0.02) !important;
            border-radius: 8px !important;
            border-left: 3px solid var(--primary-color) !important;
            transition: all 0.3s ease !important;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05) !important;
          }
          
          .content ol li:hover,
          .content ul li:hover {
            background: rgba(255, 153, 0, 0.05) !important;
            transform: translateX(4px) !important;
            box-shadow: 0 4px 12px rgba(255, 153, 0, 0.15) !important;
          }
          
          /* 5. 分类标题样式 - 重点优化 */
          .content h3 {
            color: var(--primary-color) !important;
            border-bottom: 2px solid rgba(255, 153, 0, 0.2);
            padding: 0.8rem 1.2rem !important;
            margin: 2.5rem 0 1.5rem 0 !important;
            font-weight: 700 !important;
            background: linear-gradient(90deg, rgba(255, 153, 0, 0.1), transparent);
            border-radius: 8px;
            position: relative;
          }
          
          .content h3::before {
            content: '📂';
            margin-right: 0.5rem;
            font-size: 1.1em;
          }
          
          /* 6. 链接样式 */
          .content a {
            color: var(--primary-color) !important;
            text-decoration: none !important;
            font-weight: 500 !important;
            transition: all 0.2s ease !important;
          }
          
          .content a:hover {
            color: var(--primary-dark) !important;
            text-decoration: underline !important;
          }
          
          /* 7. 强调文本 */
          .content strong {
            color: var(--primary-color) !important;
            font-weight: 700 !important;
          }
          
          /* 8. 图片样式 */
          .content img {
            margin: 1rem auto !important;
            border-radius: 8px !important;
            max-width: 100% !important;
            height: auto !important;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1) !important;
          }
          
          /* 9. 代码样式 */
          .content code {
            background-color: rgba(255, 153, 0, 0.1) !important;
            color: var(--primary-dark) !important;
            padding: 2px 6px !important;
            border-radius: 4px !important;
            font-size: 0.9em !important;
          }
          
          /* 10. 深色模式样式 */
          html.dark .content blockquote {
            background: linear-gradient(135deg, rgba(255, 153, 0, 0.15), rgba(255, 153, 0, 0.05)) !important;
            border-left-color: #ff9900 !important;
            box-shadow: 0 4px 16px rgba(255, 153, 0, 0.2) !important;
          }
          
          html.dark .content blockquote p {
            color: #ff9900 !important;
          }
          
          html.dark .content blockquote code {
            background-color: rgba(255, 153, 0, 0.25) !important;
            color: #ffaa33 !important;
            border-color: rgba(255, 153, 0, 0.4) !important;
          }
          
          html.dark .content ol li,
          html.dark .content ul li {
            background: rgba(255, 153, 0, 0.08) !important;
            border-left-color: #ff9900 !important;
            color: #f0f0f0 !important;
            box-shadow: 0 2px 8px rgba(255, 153, 0, 0.1) !important;
          }
          
          html.dark .content ol li:hover,
          html.dark .content ul li:hover {
            background: rgba(255, 153, 0, 0.15) !important;
            box-shadow: 0 6px 20px rgba(255, 153, 0, 0.25) !important;
          }
          
          html.dark .content h2,
          html.dark .content h3,
          html.dark .content h4 {
            color: #ff9900 !important;
            border-bottom-color: rgba(255, 153, 0, 0.3) !important;
          }
          
          html.dark .content h3 {
            background: linear-gradient(90deg, rgba(255, 153, 0, 0.15), transparent) !important;
          }
          
          html.dark .content a {
            color: #ff9900 !important;
          }
          
          html.dark .content a:hover {
            color: #ffaa33 !important;
          }
          
          html.dark .content strong {
            color: #ff9900 !important;
          }
          
          html.dark .content code {
            background-color: #2a2a2a !important;
            color: #ff9900 !important;
            border: 1px solid #444 !important;
          }
          
          html.dark .content img {
            box-shadow: 0 8px 32px rgba(255, 153, 0, 0.15) !important;
          }
          
          /* 响应式设计 */
          @media (max-width: 768px) {
            .content {
              padding: 1rem !important;
            }
            
            .content ol li,
            .content ul li {
              padding: 1rem !important;
            }
            
            .content blockquote {
              padding: 1rem !important;
            }
            
            .content h3 {
              padding: 0.6rem 1rem !important;
            }
          }
          EOF
          
          echo "✅ 增强分类CSS已创建"
          
          # 创建根目录首页
          cat > content/_index.md << 'EOF'
          ---
          title: AI洞察日报
          ---
          
          # AI洞察日报
          
          **精选AI新闻与深度分析** | 每日为您过滤信息噪音，提供最精选的AI资讯
          
          [查看最新日报 →](/cn/)
          EOF
          
          # 创建cn目录主页
          cat > content/cn/_index.md << 'EOF'
          ---
          title: AI洞察日报
          type: docs
          sidebar:
            open: true
          ---
          
          # AI洞察日报
          
          > 🤖 **AI资讯** | 📰 **每日早读** | 🌐 **全网数据聚合** | 🔬 **前沿科学探索** | 💡 **开源创新力量** | 🚀 **AI与人类未来**
          
          欢迎来到AI洞察日报！这里为您提供每日精选的AI资讯和深度分析。
          
          ## 🔥 最新动态
          
          浏览左侧的日期导航查看最新的AI日报内容，每日更新，精彩不断！
          EOF
          
          # 处理日报文件 - 增强分类版本
          find source-repo/daily -maxdepth 1 -type f -name "*.md" 2>/dev/null | sort -r | head -20 | while read -r SOURCE_FILE_PATH; do
            if [ -f "$SOURCE_FILE_PATH" ]; then
              FILENAME=$(basename "$SOURCE_FILE_PATH")
              DATE_PART=$(echo "$FILENAME" | sed -E 's/([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/')
              YEAR_MONTH=$(echo "$DATE_PART" | cut -c1-7)
              
              # 按年月创建目录
              TARGET_DIR="content/cn/${YEAR_MONTH}"
              mkdir -p "$TARGET_DIR"
              TARGET_FILE="${TARGET_DIR}/${FILENAME}"
              
              echo "--- 增强分类处理文件: ${FILENAME} → ${TARGET_FILE} ---"
              
              # 读取原始内容
              ORIGINAL_CONTENT=$(cat "$SOURCE_FILE_PATH")
              
              # 生成分类标签
              CATEGORY_TAGS="AI资讯 | 每日早读"
              
              # 分析内容并分类新闻
              NEWS_BY_CATEGORY=""
              
              # 使用Python来智能分类新闻内容
              python3 << PYTHON_EOF
          import re
          import os
          
          # 读取原始内容
          with open("${SOURCE_FILE_PATH}", "r", encoding="utf-8") as f:
              content = f.read()
          
          # 基础分类标签
          category_tags = "AI资讯 | 每日早读"
          
          # 智能分类检测
          categories = []
          if re.search(r'OpenAI|ChatGPT|GPT|Claude|Gemini|大模型|语言模型', content, re.IGNORECASE):
              categories.append("大模型前沿")
          if re.search(r'投资|融资|IPO|上市|估值|商业|公司', content, re.IGNORECASE):
              categories.append("行业自由发声")
          if re.search(r'开源|GitHub|代码|开发者|项目', content, re.IGNORECASE):
              categories.append("开源创新力量")
          if re.search(r'研究|论文|学术|科学|实验', content, re.IGNORECASE):
              categories.append("前沿科学探索")
          if re.search(r'机器人|自动驾驶|未来|AGI', content, re.IGNORECASE):
              categories.append("AI与人类未来")
          if re.search(r'产品|功能|更新|发布|工具', content, re.IGNORECASE):
              categories.append("产品与功能更新")
          
          # 添加检测到的分类
          for cat in categories:
              category_tags += f" | {cat}"
          category_tags += " | 全网数据聚合"
          
          # 将内容按段落分割，尝试按类别组织
          paragraphs = content.split('\n\n')
          
          # 创建分类内容结构
          structured_content = ""
          
          # 今日摘要部分
          if any('摘要' in p or '概述' in p for p in paragraphs):
              summary_content = next((p for p in paragraphs if '摘要' in p or '概述' in p), "")
              if summary_content:
                  structured_content += f"""### 今日摘要
          
          {summary_content}
          
          """
          
          # AI产品与功能更新
          product_news = []
          investment_news = []
          research_news = []
          other_news = []
          
          # 简单的内容分类逻辑
          lines = content.split('\n')
          current_news = ""
          
          for line in lines:
              if line.strip() and (line.startswith('1.') or line.startswith('2.') or line.startswith('3.') or 
                                 line.startswith('4.') or line.startswith('5.') or line.startswith('6.') or
                                 line.startswith('- ') or line.startswith('* ')):
                  if current_news:
                      # 分类当前新闻
                      if re.search(r'产品|功能|更新|发布|工具|平台', current_news, re.IGNORECASE):
                          product_news.append(current_news)
                      elif re.search(r'投资|融资|IPO|商业|公司|估值', current_news, re.IGNORECASE):
                          investment_news.append(current_news)
                      elif re.search(r'研究|论文|学术|科学', current_news, re.IGNORECASE):
                          research_news.append(current_news)
                      else:
                          other_news.append(current_news)
                  current_news = line
              elif line.strip():
                  current_news += '\n' + line
          
          # 处理最后一条新闻
          if current_news:
              if re.search(r'产品|功能|更新|发布|工具|平台', current_news, re.IGNORECASE):
                  product_news.append(current_news)
              elif re.search(r'投资|融资|IPO|商业|公司|估值', current_news, re.IGNORECASE):
                  investment_news.append(current_news)
              elif re.search(r'研究|论文|学术|科学', current_news, re.IGNORECASE):
                  research_news.append(current_news)
              else:
                  other_news.append(current_news)
          
          # 构建分类内容
          if product_news:
              structured_content += "### 产品与功能更新\n\n"
              for news in product_news:
                  structured_content += f"{news}\n\n"
          
          if investment_news:
              structured_content += "### 行业展望与社会影响\n\n"
              for news in investment_news:
                  structured_content += f"{news}\n\n"
          
          if research_news:
              structured_content += "### 前沿研究\n\n"
              for news in research_news:
                  structured_content += f"{news}\n\n"
          
          if other_news:
              structured_content += "### 今日AI资讯\n\n"
              for news in other_news:
                  structured_content += f"{news}\n\n"
          
          # 如果没有成功分类，使用原始内容
          if not structured_content.strip():
              structured_content = f"""### 今日AI资讯
          
          {content}
          """
          
          # 创建最终文件内容
          date_part = "${DATE_PART}"
          final_content = f'''---
          linkTitle: {date_part[5:]}-日报
          title: "AI洞察日报 - {date_part}"
          date: {date_part}T08:00:00+08:00
          draft: false
          weight: 1
          type: docs
          sidebar:
            open: true
          description: "{date_part}的AI行业动态、技术发展和重要资讯汇总"
          breadcrumbs: false
          comments: true
          ---
          
          ## AI洞察日报 {date_part}
          
          > {category_tags} | [访问网页版↗️](https://april8000.github.io/Hextra-AI-Insight-Daily/)
          
          {structured_content}
          '''
          
          # 写入文件
          with open("${TARGET_FILE}", "w", encoding="utf-8") as f:
              f.write(final_content)
          
          print(f"✅ 增强分类文件已创建: ${TARGET_FILE}")
          PYTHON_EOF
              
              # 创建月份索引
              MONTH_INDEX="${TARGET_DIR}/_index.md"
              if [ ! -f "$MONTH_INDEX" ]; then
                cat > "$MONTH_INDEX" << INDEX_EOF
          ---
          title: "${YEAR_MONTH} AI日报"
          date: ${YEAR_MONTH}-01T00:00:00+08:00
          type: docs
          sidebar:
            open: true
          weight: 1
          description: "${YEAR_MONTH}月份AI行业动态汇总"
          ---
          
          # ${YEAR_MONTH} AI洞察日报
          
          > 📅 **${YEAR_MONTH}** | 🔥 **月度精选** | 📊 **数据汇总** | 🎯 **趋势分析**
          
          本月的AI行业动态和技术趋势汇总，精选重要资讯。
          
          ### 分类说明
          
          - 🤖 **AI资讯** - 基础AI行业信息
          - 📰 **每日早读** - 精选日报内容  
          - 🚀 **大模型前沿** - OpenAI、Google等大模型最新进展
          - 💼 **行业自由发声** - 商业动态、投资融资、市场分析
          - 💡 **开源创新力量** - GitHub热门项目和开发者工具
          - 🔬 **前沿科学探索** - 学术论文、研究突破、技术进展
          - 🤖 **AI与人类未来** - AGI、机器人、自动驾驶等前沿应用
          - 📱 **产品与功能更新** - 新产品发布、功能更新、工具推荐
          - 🌐 **全网数据聚合** - 多平台资讯整合
          
          ---
          
          *点击左侧导航浏览本月各日的详细AI资讯内容*
          INDEX_EOF
                echo "✅ 月份索引已创建: ${MONTH_INDEX}"
              fi
            fi
          done
          
          echo "--- 增强分类版本设置完成 ---"
          
          # 显示统计
          echo "=== 增强分类统计 ==="
          echo "📄 内容文件: $(find content -name "*.md" -type f | wc -l)"
          echo "🎨 样式文件: $(find assets -name "*.css" -type f | wc -l)"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add .
          if git diff --staged --quiet; then
            echo "ℹ️ 没有需要提交的更改"
          else
            git commit -m "✨ 增强右侧分类导航：智能分类+结构化内容 - $(date +%Y-%m-%d-%H-%M)"
            git push
            echo "✅ 增强分类版本已推送"
          fi

      - name: Notify completion
        if: always()
        run: |
          echo "🎉 增强分类导航版本完成！"
          echo "✨ 核心功能:"
          echo "   📂 右侧显示分类导航目录"
          echo "   🎯 智能新闻分类和组织"
          echo "   📋 结构化内容展示"
          echo "   🎨 增强的分类标题样式"
          echo "   🌗 深浅模式完美支持"
          echo "   📱 完美响应式设计"
          echo "   🔍 更好的内容可读性"
          echo "📊 统计: $(find content/cn -name "*.md" -type f | wc -l) 个内容文件"
